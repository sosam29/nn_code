mat1 <- matrix(1:12, nrow = 2, ncol = 6)
list1 <- c(c(1:3), list)
str(list1)
df1 <- iris
v1 <- vec1[1]
v1
v5 <-vec1[5]
v5
list1 <- list[1]
listn <- list[length(list)]
listnn <- list[-1]
vnn <- vec1[-1]
vnn
vnn <- vec1[-1:2]
vnn <- vec1[-c(1:2)]
str(vec1)
str(list)
str(list1)
str(df1)
str(mat1)
mat11 <- mat[1]
mat11 <- mat1[1]
View(mat1)
mat11 <- mat1[1][3]
library(ggplot2)
??`ggplot2-package`
library(MASS)
??MASS
rm(list =ls())
dataframe <- birthwt
View(dataframe)
str(dataframe)
help("birthwt")
sapply(birthwt, function (x) unique(x))
sapply(birthwt, function (x) length(unique(x)))
sapply(birthwt, function (x) min(unique(x)))
sapply(birthwt, function (x) max(unique(x)))
sapply(birthwt, function (x) mean(unique(x)))
dataframe$low <-as.factor(dataframe$low)
dataframe$race <-as.factor(dataframe$race)
dataframe$smoke <-as.factor(dataframe$smoke)
dataframe$plt <-as.factor(dataframe$ptl)
dataframe
View(dataframe)
View(dataframe)
help(dataframe)
ggplot(data = dataframe, geom_histogram(aes(x=age),color="blue")+
scale_x_continuous(name = "age", breaks = seq(0,50,5)+
ggtitle(label = "Histogram of Age")))
ggplot(data = dataframe)+ geom_histogram(aes(x=age),color="blue")+
scale_x_continuous(name = "age", breaks = seq(0,50,5))+
ggtitle(label = "Histogram of Age") + theme_bw()
ggplot(data = dataframe)+ geom_abline(aes(x=age),color="blue")+
scale_x_continuous(name = "age", breaks = seq(0,50,5))+
ggtitle(label = "Histogram of Age") + theme_bw()
ggplot(data = dataframe)+ geom_histogram(aes(x=age),color="blue")+
scale_x_continuous(name = "age", breaks = seq(0,50,5))+
ggtitle(label = "Histogram of Age") + theme_bw()
ggplot(data = dataframe)+ geom_density(aes(x=age),color="blue")+
scale_x_continuous(name = "age", breaks = seq(0,50,5))+
ggtitle(label = "Density of Age") + theme_bw()
ggplot(data = dataframe)+ geom_density(aes(x=age),color="red")+
scale_x_continuous(name = "age", breaks = seq(0,50,5))+
ggtitle(label = "Density of Age") + theme_bw()
ggplot(data = dataframe)+ geom_density(aes(x=age),color="red")+
scale_x_continuous(name = "age", breaks = seq(0,50,5))+
ggtitle(label = "Density of Age") + theme_classic()
ggplot(data = dataframe)+ geom_histogram(aes(x=age),color="blue")+
scale_x_continuous(name = "age", breaks = seq(0,50,5))+
ggtitle(label = "Histogram of Age") + theme_gray()
ggplot(data = dataframe)+ geom_histogram(aes(x=age),color="blue")+
scale_x_continuous(name = "age", breaks = seq(0,50,5))+
ggtitle(label = "Histogram of Age") + theme_dark()
ggplot(data = dataframe)+ geom_histogram(aes(x=age),color="blue")+
scale_x_continuous(name = "age", breaks = seq(0,50,5))+
ggtitle(label = "Histogram of Age") + theme_linedraw()
ggplot(data = dataframe)+ geom_point(aes(x=age, y=lwt),color="blue", alpha =0.8, size=2)+
scale_x_continuous(name = "age", breaks = seq(0,50,5))+
scale_y_continuous(name = "lwt", breaks = seq(0,350,50))
ggtitle(label = "Scatter plot of age and lwt") + theme_classic()
ggplot(data = dataframe)+ geom_jitter(aes(x=age, y=lwt),color="blue", alpha =0.8, size=2)+
scale_x_continuous(name = "age", breaks = seq(0,50,5))+
scale_y_continuous(name = "lwt", breaks = seq(0,350,50))
ggtitle(label = "Scatter plot of age and lwt") + theme_classic()
??`ggplot2-package`
dataframe <- birthwt
library(ggplot2)
library(ggplot2)
library(MASS)
dataframe <- birthwt
dataframe$low <-as.factor(dataframe$low)
dataframe$race <-as.factor(dataframe$race)
dataframe$smoke <-as.factor(dataframe$smoke)
dataframe$plt <-as.factor(dataframe$ptl)
ggplot(data = dataframe)+ geom_histogram(aes(x=age),color="blue")+
scale_x_continuous(name = "Age", breaks = seq(0,50,5))+
ggtitle(label = "Histogram of Age") + theme_linedraw()
ggplot(data = dataframe)+ geom_density(aes(x=age),color="red")+
scale_x_continuous(name = "age", breaks = seq(0,50,5))+
ggtitle(label = "Density of Age") + theme_classic()
ggplot(data = dataframe)+ geom_jitter(aes(x=age, y=lwt),color="blue", alpha =0.8, size=2)+
scale_x_continuous(name = "age", breaks = seq(0,50,5))+
scale_y_continuous(name = "lwt", breaks = seq(0,350,50))
ggtitle(label = "Scatter plot of age and lwt") + theme_classic()
ggplot(data = dataframe)+ geom_jitter(aes(x=age, y=lwt, color= race), alpha =0.8, size=2)+
scale_x_continuous(name = "age", breaks = seq(0,50,5))+
scale_y_continuous(name = "lwt", breaks = seq(0,350,50))
ggtitle(label = "Scatter plot of age and lwt") + theme_classic()
ggplot(data = dataframe)+ geom_jitter(aes(x=age, y=lwt, color= race, shape=smoke), alpha =0.8, size=2)+
scale_x_continuous(name = "age", breaks = seq(0,50,5))+
scale_y_continuous(name = "lwt", breaks = seq(0,350,50))
ggtitle(label = "Scatter plot of age and lwt") + theme_classic()
ggplot(data = dataframe)+ geom_bar(aes(x=race),color="blue")+
scale_x_continuous(name = "Race", breaks = seq(0,50,5))+
ggtitle(label = "barplot of Race") + theme_linedraw()
ggplot(data = dataframe)+ geom_bar(aes(x=race),color="blue")+
ggtitle(label = "barplot of Race") + theme_linedraw()
ggplot(data = dataframe)+ geom_bar(aes(x=race),color="blue")+
ggtitle(label = "barplot of Race") + theme_bw()
ggplot(data = dataframe)+ geom_bar(aes(x=race, color= smoke))+
ggtitle(label = "barplot of Race") + theme_bw()
ggplot(data = dataframe)+ geom_bar(aes(x=race, color= smoke))+
ggtitle(label = "barplot of Race") + theme_classic()
ggplot(data = dataframe)+ geom_bar(aes(x=race, color= smoke, shape=plt))+
ggtitle(label = "barplot of Race") + theme_classic()
ggplot(data = dataframe)+ geom_bar(aes(x=race, fill= smoke, shape=plt))+
ggtitle(label = "barplot of Race") + theme_classic()
ggplot(data = dataframe)+ geom_bar(aes(x=smoke, fill= race, shape=plt))+
ggtitle(label = "barplot of Race") + theme_classic()
ggplot(data = dataframe)+ geom_bar(aes(x=smoke, fill= race, shape=plt))+
ggtitle(label = "barplot of smoke /Racewise") + theme_classic()
ggplot(data= dataframe) + geom_bar(aes(x=smoke)) +
ggtitle("Bar graph for smoker based on race")+
theme_bw()+ facet_wrap(~race)
## using categories for digging into more
ggplot(data= dataframe) + geom_bar(aes(x=smoke, fill=low) +
ggtitle("Bar graph for smoker based on race")+
theme_bw()+ facet_wrap(~race)
ggplot(data= dataframe) + geom_bar(aes(x=smoke, fill=as.factor(low))) +
ggtitle("Bar graph for smoker based on race")+
theme_bw()+ facet_wrap(~race)
ggplot(data= dataframe) + geom_bar(aes(x=smoke)) +
ggtitle("Bar graph for smoker based on race")+
theme_bw()+ facet_wrap(~race)
ggplot(data= dataframe) + geom_bar(aes(x=smoke, fill=low)) +
ggtitle("Bar graph for smoker based on race")+
theme_bw()+ facet_wrap(~race)
ggplot(data= dataframe) + geom_bar(aes(x=smoke, fill=as.factor(low))) +
ggtitle("Bar graph for smoker based on race")+
theme_bw()+ facet_wrap(~race)
ggplot(data= dataframe) + geom_density(aes(bwt)) +
ggtitle("Densisity distribution for btw")+
theme_bw()+ facet_wrap(~race+smoke)
ggplot(data= dataframe) + geom_boxplot(aes(x="bwt", y=bwt)) +
ggtitle("Box plot for btw")+
theme_bw()+ facet_wrap(~race+smoke)
ggplot(data= dataframe) + geom_boxplot(aes(x=smoke, y=bwt)) +
ggtitle("Box plot for btw")+
theme_bw() #+ facet_wrap(~race+smoke)
ggplot(data= dataframe) + geom_boxplot(aes(x=smoke, y=bwt)) +
ggtitle("Box plot for btw")+
theme_bw() + facet_wrap(~race)
library(ggplot2)
library(MASS)
dataframe <- birthwt
str(dataframe)
dataframe$low <-as.factor(dataframe$low)
dataframe$race <-as.factor(dataframe$race)
dataframe$smoke <-as.factor(dataframe$smoke)
dataframe$plt <-as.factor(dataframe$ptl)
ggplot(data = dataframe)+ geom_histogram(aes(x=age),color="blue")+
ggplot(data = dataframe)+ geom_histogram(aes(x=age),color="blue")+
scale_x_continuous(name = "Age", breaks = seq(0,50,5))+
ggtitle(label = "Histogram of Age") + theme_linedraw()
ggplot(data = dataframe)+ geom_histogram(aes(x=age),color="blue")+
scale_x_continuous(name = "Age", breaks = seq(0,50,5))+
ggtitle(label = "Histogram of Age") + theme_linedraw()
ggplot(data = dataframe)+ geom_density(aes(x=age),color="red")+
scale_x_continuous(name = "age", breaks = seq(0,50,5))+
ggtitle(label = "Density of Age") + theme_classic()
ggplot(data = dataframe)+ geom_jitter(aes(x=age, y=lwt),color="blue", alpha =0.8, size=2)+
scale_x_continuous(name = "age", breaks = seq(0,50,5))+
scale_y_continuous(name = "lwt", breaks = seq(0,350,50))
ggtitle(label = "Scatter plot of age and lwt") + theme_classic()
ggplot(data = dataframe)+ geom_jitter(aes(x=age, y=lwt, color= race), alpha =0.8, size=2)+
scale_x_continuous(name = "age", breaks = seq(0,50,5))+
scale_y_continuous(name = "lwt", breaks = seq(0,350,50))
ggtitle(label = "Scatter plot of age and lwt") + theme_classic()
ggplot(data = dataframe)+ geom_jitter(aes(x=age, y=lwt, color= race, shape=smoke), alpha =0.8, size=2)+
scale_x_continuous(name = "age", breaks = seq(0,50,5))+
scale_y_continuous(name = "lwt", breaks = seq(0,350,50))
ggtitle(label = "Scatter plot of age and lwt") + theme_classic()
ggplot(data = dataframe)+ geom_bar(aes(x=smoke, fill= race, shape=plt))+
ggtitle(label = "barplot of smoke /Racewise") + theme_classic()
ggplot(data= dataframe) + geom_bar(aes(x=smoke, fill=as.factor(low))) +
ggtitle("Bar graph for smoker based on race")+
theme_bw()+ facet_wrap(~race)
ggplot(data= dataframe) + geom_density(aes(bwt)) +
ggtitle("Densisity distribution for btw")+
theme_bw()+ facet_wrap(~race+smoke)
ggplot(data= dataframe) + geom_boxplot(aes(x="bwt", y=bwt)) +
ggtitle("Box plot for btw")+
theme_bw()+ facet_wrap(~race+smoke)
ggplot(data= dataframe) + geom_boxplot(aes(x=smoke, y=bwt)) +
ggtitle("Box plot for btw")+
theme_bw() + facet_wrap(~race)
library(dplyr)
install.packages("hflights")
library(hflights)
library(dplyr)
help("hflights")
head(hflights)
df <- hflights
str(hflights)
View(df)
help("dplyr")
browseVignettes(package = "dplyr")
tail_num-unique <- select(df, UniqueCarrier)
tail_num.unique <- select(df, UniqueCarrier)
tail_num.unique
View(tail_num.unique)
tail_num.unique <- select(df, UniqueCarrier, tail_num.unique)
tail_num.unique <- select(df, UniqueCarrier, TailNum)
modified_dt <-df%>%select(FlightNum, TaxiIn, TaxiOut)
View(modified_dt)
modified_dt2 <-select(df, c(FlightNum, TaxiIn, TaxiOut))
all.equal(modified_dt , modified_dt2)
env <- environment()
env
"c" %>%assign(100, envir = env)
c
modified_df <- df %>%same_frac(size=0.1)
modified_df <- df %>%same_frac(size=0.1)
modified_df <- df %>%same_frac(size=0.1)
modified_df <- df %>%sample_frac(size=0.1)
View(df)
View(modified_df)
modified_df2 <-df %>% filter(DayOfWeek %between% c(1:3)) %>% sample_frac(size = 0.01)
modified_df2 <-df %>% filter(DayOfWeek %in% c(1:3)) %>% sample_frac(size = 0.01)
View(modified_df2)
modified_df2 <-df %>% filter(DayOfWeek %inrange% c(1:3)) %>% sample_frac(size = 0.01)
modified_df3 <- df%>% filter(Distance <500)
modified_df2 <- df %>% filter(DayofMonth %in% c(1,2,3))
modified_df2 <- df %>% filter(DayofMonth %in% -c(1,2,3))
modified_df2 <- df %>% filter(DayofMonth %in% c(1,2,3))
modified_df2 <- df %>% filter(DayofMonth %notin% c(1,2,3))
modified_df2 <- df %>% filter(DayofMonth %!in% c(1,2,3))
modified_df2 <- df %>% filter(!(DayofMonth %in% c(1,2,3)))
View(modified_df2)
df_depdelay = df%>%group_by(Month)%>% summarise(avg_DepDelay=mean(DepDelay,
View(modified_df3)
df_depdelay <-df%>%group_by(Month)%>% summarise(avg_DepDelay=mean(DepDelay,
df_depdelay <- df%>%group_by(Month)%>% summarise(avg_DepDelay=mean(DepDelay,
na.rm= T))
View(df_depdelay)
df_depdelay <- df%>%group_by(Month)%>% summarise(avg_DepDelay=mean(DepDelay,
na.rm= T),
std_DevArrDelay= sd(ArrDelay, na.rm = T))
View(df_depdelay)
df_depdelay <- df%>%group_by(Month, DayOfWeek)%>% summarise(avg_DepDelay=mean(DepDelay,
na.rm= T),
std_DevArrDelay= sd(ArrDelay, na.rm = T))
View(df_depdelay)
df_depdelay <- df%>%group_by(Month, DayOfWeek, UniqueCarrier)%>% summarise(avg_DepDelay=mean(DepDelay,
df_depdelay <- df%>%group_by(Month, UniqueCarrier)%>% summarise(avg_DepDelay=mean(DepDelay,
View(df_depdelay)
View(df_depdelay)
df_depdelay <- df%>%group_by(Month, UniqueCarrier)%>% summarise(avg_DepDelay=mean(DepDelay,
na.rm= T),
std_DevArrDelay= sd(ArrDelay, na.rm = T))
View(df_depdelay)
environment()
rm(list = lm())
rm(list = ls())
install.packages("MASS")
install.packages("MASS")
library(MASS)
df <- birthwt
View(df)
df <- df[, c(age, lwt, bwt)]
df <- df[, c("age", "lwt", "bwt")]
a1 <- apply(df, 2, mean)
a1
a1 <- apply(df, 2, mean, max, sd)
a1 <- apply(df, 2, c(mean, max, sd))
a1 <- apply(df, 2, c(mean))
a1 <- apply(df, 2, c[mean])
a1 <- apply(df, 2, mean)
str(a1)
class(a1)
rm(list = ls())
library(MASS)
library(rpart)
help(rpart)
help("rpart.plot")
??rpart.plot
??rpart
install.packages("rpart)
library(rpart)
help("rpart")
?rpart
?rpart.plot
install.packages("rpart")
install.packages("rpart")
install.packages("repart.plot")
install.packages("rpart.plot")
??rpart.plot
library(rpart.plot)
df <- birthwt
library(MASS)
library(rpart)
library(rpart.plot)
df <- birthwt
str(df)
dim(df)
head(df)
tail(df)
mid(df)
center(df)
str(df)
df$low <-as.factor(df$low)
df$smoke <-as.factor(df$smoke)
df$race <-as.factor(df$race)
df$ptl <-as.factor(df$ptl)
str(df)
df$ht <-as.factor(df$ht)
df$ui <-as.factor(df$ui)
df$ftv <-as.factor(df$ftv)
str(df)
for (st in cols) {
df[,st]= as.factor(df[,st])
}
cols <-c("lwt","race","smoke","plt","ht","ui","ftv")
for (st in cols) {
df[,st]= as.factor(df[,st])
}
cols <-c("lwt","race","smoke","ptl","ht","ui","ftv")
for (st in cols) {
df[,st]= as.factor(df[,st])
}
str(df)
install.packages("caTools")
library(caTools)
?caTools
ind <- sample.split(Y=df$low, SplitRatio = 0.8)
train_df <- df[ind,]
test_df <- df[!ind,]
train_df
train_df.head(4)
train_df.head
train_df.head()
str(train_df)
str(test_df)
dstree <- rpart(low ~ ,.-bwt, data=train_df, method='class', cp=0.09)
dstree <- rpart(low ~ .-bwt, data=train_df, method='class', cp=0.09)
summary(dstree)
prp(dstree)
dstree <- rpart(low ~ .-bwt, data=train_df, method='class', cp=0.009)
summary(dstree)
prp(dstree)
prp(dstree, extra = 1)
dstree <- rpart(low ~ ., data=train_df, method='class', cp=0.009)
summary(dstree)
prp(dstree)
prp(dstree, extra = 1)
dstree <- rpart(low ~ .-btw, data=train_df, method='class', cp=0.009)
dstree <- rpart(low ~ .-bwt, data=train_df, method='class', cp=0.009)
summary(dstree)
prp(dstree)
prp(dstree, extra = 1)
View(test_df)
dstree <- rpart(low ~ age+lwt+race+smoke, data=train_df, method='class', cp=0.009)
summary(dstree)
prp(dstree)
prp(dstree, extra = 1)
dstree <- rpart(low ~ age+lwt+race+smoke, data=train_df, method='class', cp=0.1)
summary(dstree)
prp(dstree)
prp(dstree, extra = 1)
dstree <- rpart(low ~ age+lwt+race+smoke, data=train_df, method='class', cp=0.0001)
summary(dstree)
prp(dstree)
prp(dstree, extra = 1)
predict_df <- predict(dstree, test_df, class='class')
t <-table(predictions=predict_df, test_df$low)
predict_df
dstree <- rpart(low ~ age+lwt+race+smoke, data=train_df, method='class', cp=0.009)
summary(dstree)
prp(dstree)
predict_df <- predict(dstree, test_df, class='class')
dstree
dim(dstree)
library(pROC)
install.packages("pROC")
library(pROC)
install.packages("pROC")
library(pROC)
install.packages("pROC")
install.packages("pROC")
library("pROC", lib.loc="/anaconda3/lib/R/library")
library("rpart", lib.loc="/anaconda3/lib/R/library")
library("rpart.plot", lib.loc="/anaconda3/lib/R/library")
library(MASS)
df <- birthwt
cols <-c("lwt","race","smoke","ptl","ht","ui","ftv")
for (st in cols) {
df[,st]= as.factor(df[,st])
}
install.packages("caTools")
library(caTools)
ind <- sample.split(Y=df$low, SplitRatio = 0.8)
train_df <- df[ind,]
test_df <- df[!ind]
dstree <- rpart(low ~ age+lwt+race+smoke, data=train_df, method='class', cp=0.009)
summary(dstree)
prp(dstree)
prp(dstree, extra = 1)
library(pROC)
predict_df <- predict(dstree, test_df, class='class')
t <-table(predictions=predict_df, test_df$low)
predict_df
predict_df <- predict(dstree, test_df, type='class')
predict_df
t <-table(predictions=predict_df, test_df$low)
pred_acc = sum(diag(t))/sum(t)
pred_acc
predict_prob <- predict(dstree, test_df, type='prob')
predict_prob
t_auc <-auc(predictions=predict_prob[,2], test_df$low)
predict_prob
t_auc <-auc(predictions=predict_prob[,2], test_df$low)
t_auc <-auc(test_df$low, predict_prob[,1])
t_auc <-auc(test_df$low, predict_prob[,1])
plot(roc(test_df$low, predict_prob[,1]))
plot(roc(test_df$low, predict_prob[,0]))
plot(roc(test_df$low, predict_prob[,2]))
plot(roc(test_df$low, predict_prob[,1]))
plot(roc(test_df$low, predict_prob[,2]))
set.seed(123)
ind <- sample.split(Y=df$low, SplitRatio = 0.8)
train_df <- df[ind,]
test_df <- df[!ind]
dstree <- rpart(low ~ age+lwt+race+smoke, data=train_df, method='class', cp=0.009)
predict_class <- predict(dstree, test_df, type='class')
t <-table(predictions=predict_class, test_df$low)
pred_acc_class = sum(diag(t))/sum(t)
predict_prob <- predict(dstree, test_df, type='prob')
t_auc <-auc(test_df$low, predict_prob[,1])
plot(roc(test_df$low, predict_prob[,2]))
library(MASS)
library(randomForest)
rfNews()
?randomForest
set.seed(123)
df <-birthwt
cols <-c("low","race", "smoke","ptl","ftv","ht", "ui")
for (str in cols) {
df[,st]<-as.factor(df[,st])
}
cols <-c("low","race", "smoke","ptl","ftv","ht", "ui")
for (st in cols) {
df[,st]<-as.factor(df[,st])
}
library(caTools)
ind <-sample.split(Y= df$low, SplitRatio = 0.8)
df_train<- df[ind,]
df_test <- df[!ind,]
colnames(df_train)
RandomForestModel <- randomForest(low~,.-bwt, data= df_train, method="class", mtry=3)
RandomForestModel <- randomForest(low~.-bwt, data= df_train, method="class", mtry=3)
summary(RandomForestModel)
View(RandomForestModel)
PredictionWithClass <-predict(RandomForestModel, df_test, type ="class")
t<-table(PredictionWithClass,df_test$low)
t
conf_matrix <- sum(diag(t))/sum(t)
t
conf_matrix
RandomForestModel <- randomForest(low~.-bwt, data= df_train, method="class",
mtry=3, ntree=1000)
summary(RandomForestModel)
## Predictionwith Class
PredictionWithClass <-predict(RandomForestModel, df_test, type ="class")
t<-table(PredictionWithClass,df_test$low)
t
conf_matrix <- sum(diag(t))/sum(t)
conf_matrix
PredictionWithProb <-predict(RandomForestModel, df_test, type ="prob")
str(PredictionWithProb)
head(PredictionWithClass[,2])
head(PredictionWithClass,2)
auc<-auc(df_test$low, PredictionWithProb[,2])
plot(roc(df_test$low, PredictionWithProb[,2]))
install.packages("e1071")
setwd("~/Downloads/UDEMY_ML/PCA")
dataset = read.csv('Wine.csv')
# split dataset
library(caTools)
set.seed(123)
split = sample.split(dataset$Customer_Segment, SplitRatio = 0.2)
training_set = subset(dataset, split==T)
testing_set = subset(dataset, split ==F)
#feature scaling
training_set= scale(training_set[-14])
testing_set = scale(testing_set[-14])
install.packages('caret')
library('caret')
install.packages("lattice")
install.packages("lattice")
install.packages("lattice")
install.packages("lattice")
install.packages('caret')
